name: Deploy to Production

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      deploy_env:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

env:
  NODE_VERSION: '20'
  FIREBASE_PROJECT_ID: 'keesha-10560'

jobs:
  # Wait for CI to pass before deploying
  check-ci:
    name: Check CI Status
    runs-on: ubuntu-latest
    steps:
      - name: Wait for CI to complete
        uses: lewagon/wait-on-check-action@v1.3.3
        with:
          ref: ${{ github.ref }}
          check-name: 'Lint, Test & Build'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
          allowed-conclusions: success

  deploy:
    name: Build and Deploy to Production
    runs-on: ubuntu-latest
    needs: check-ci
    environment: 
      name: production
      url: https://keesha-10560.web.app
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit
        
      - name: Build application
        run: npm run build
        env:
          CI: true
          GENERATE_SOURCEMAP: false
          REACT_APP_ENV: production
          
      - name: Validate build
        run: |
          if [ ! -d "build" ]; then
            echo "Build directory not found!"
            exit 1
          fi
          if [ ! -f "build/index.html" ]; then
            echo "index.html not found in build directory!"
            exit 1
          fi
          echo "Build validation successful"
          
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEESHA_10560 }}
          channelId: live
          projectId: ${{ env.FIREBASE_PROJECT_ID }}
          
      - name: Update deployment status
        if: success()
        run: |
          echo "‚úÖ Deployment successful!"
          echo "üåê Live URL: https://${{ env.FIREBASE_PROJECT_ID }}.web.app"
          
      - name: Notify deployment failure
        if: failure()
        run: |
          echo "‚ùå Deployment failed!"
          echo "Check the logs above for details."
