name: Code Quality & Analysis

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # Run weekly on Sundays at 3 AM UTC
    - cron: '0 3 * * 0'

env:
  NODE_VERSION: '20'

jobs:
  code_analysis:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch full history for better analysis
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run ESLint
        run: |
          npx eslint . --ext .js,.jsx,.ts,.tsx --format json --output-file eslint-results.json || true
          npx eslint . --ext .js,.jsx,.ts,.tsx --format stylish
          
      - name: Run Prettier check
        run: |
          npx prettier --check "src/**/*.{js,jsx,ts,tsx,json,css,md}" || true
          
      - name: TypeScript strict check
        run: |
          # Create temporary tsconfig for strict checking
          cat > tsconfig.strict.json << EOF
          {
            "extends": "./tsconfig.json",
            "compilerOptions": {
              "strict": true,
              "noImplicitAny": true,
              "noImplicitReturns": true,
              "noUnusedLocals": true,
              "noUnusedParameters": true
            }
          }
          EOF
          npx tsc --noEmit --project tsconfig.strict.json || true
          
      - name: Generate code metrics
        run: |
          echo "📊 Code Metrics:" > code-metrics.md
          echo "================" >> code-metrics.md
          echo "" >> code-metrics.md
          
          # Count lines of code
          echo "**Lines of Code:**" >> code-metrics.md
          find src -name "*.tsx" -o -name "*.ts" | xargs wc -l | tail -1 >> code-metrics.md
          echo "" >> code-metrics.md
          
          # Count files
          echo "**File Count:**" >> code-metrics.md
          echo "- TypeScript files: $(find src -name "*.ts" | wc -l)" >> code-metrics.md
          echo "- React components: $(find src -name "*.tsx" | wc -l)" >> code-metrics.md
          echo "- CSS files: $(find src -name "*.css" | wc -l)" >> code-metrics.md
          echo "" >> code-metrics.md
          
          # Function complexity (basic)
          echo "**Component Analysis:**" >> code-metrics.md
          grep -r "export.*function\|export.*const.*=" src --include="*.tsx" --include="*.ts" | wc -l | xargs echo "- Exported functions/components:" >> code-metrics.md
          
          cat code-metrics.md
          
      - name: Upload analysis results
        uses: actions/upload-artifact@v4
        with:
          name: code-analysis-results
          path: |
            eslint-results.json
            code-metrics.md
          retention-days: 30
          
      - name: Comment PR with metrics
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            try {
              const metrics = fs.readFileSync('code-metrics.md', 'utf8');
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `## 📊 Code Quality Report
                
                ${metrics}
                
                *This report is automatically generated for all pull requests.*`
              });
            } catch (error) {
              console.log('Could not post metrics comment:', error);
            }

  dependency_analysis:
    name: Dependency Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Analyze bundle
        run: |
          npm run build
          
          # Basic bundle analysis
          echo "📦 Bundle Analysis:" > bundle-analysis.md
          echo "==================" >> bundle-analysis.md
          echo "" >> bundle-analysis.md
          
          # Main bundle size
          MAIN_JS=$(find build/static/js -name "main.*.js" | head -1)
          if [ -f "$MAIN_JS" ]; then
            SIZE=$(du -h "$MAIN_JS" | cut -f1)
            echo "**Main bundle size:** $SIZE" >> bundle-analysis.md
          fi
          
          # CSS size
          MAIN_CSS=$(find build/static/css -name "main.*.css" | head -1)
          if [ -f "$MAIN_CSS" ]; then
            SIZE=$(du -h "$MAIN_CSS" | cut -f1)
            echo "**CSS bundle size:** $SIZE" >> bundle-analysis.md
          fi
          
          # Total build size
          TOTAL_SIZE=$(du -sh build | cut -f1)
          echo "**Total build size:** $TOTAL_SIZE" >> bundle-analysis.md
          echo "" >> bundle-analysis.md
          
          cat bundle-analysis.md
          
      - name: Check for unused dependencies
        run: |
          # Install depcheck to find unused dependencies
          npm install -g depcheck
          
          echo "🔍 Dependency Check:" > dependency-check.md
          echo "====================" >> dependency-check.md
          echo "" >> dependency-check.md
          
          depcheck --json > depcheck-results.json || true
          
          # Parse results
          UNUSED=$(cat depcheck-results.json | jq -r '.dependencies[]?' | tr '\n' ' ')
          if [ -n "$UNUSED" ]; then
            echo "**Potentially unused dependencies:**" >> dependency-check.md
            echo "$UNUSED" | tr ' ' '\n' | sed 's/^/- /' >> dependency-check.md
          else
            echo "✅ No unused dependencies found" >> dependency-check.md
          fi
          
          cat dependency-check.md
          
      - name: Upload bundle analysis
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: |
            bundle-analysis.md
            dependency-check.md
            depcheck-results.json
          retention-days: 30

  accessibility_check:
    name: Accessibility Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        
      - name: Serve build and run accessibility tests
        run: |
          # Install serve and axe-cli
          npm install -g serve @axe-core/cli
          
          # Start server in background
          serve -s build -p 3000 &
          SERVER_PID=$!
          
          # Wait for server to start
          sleep 10
          
          # Run accessibility audit
          echo "🌐 Accessibility Audit:" > accessibility-report.md
          echo "======================" >> accessibility-report.md
          echo "" >> accessibility-report.md
          
          axe http://localhost:3000 --format json --output axe-results.json || true
          
          # Parse results
          VIOLATIONS=$(cat axe-results.json | jq '.violations | length')
          echo "**Violations found:** $VIOLATIONS" >> accessibility-report.md
          
          if [ "$VIOLATIONS" -gt "0" ]; then
            echo "" >> accessibility-report.md
            echo "**Issues to fix:**" >> accessibility-report.md
            cat axe-results.json | jq -r '.violations[] | "- \(.id): \(.description)"' >> accessibility-report.md
          else
            echo "✅ No accessibility violations found" >> accessibility-report.md
          fi
          
          # Clean up
          kill $SERVER_PID
          
          cat accessibility-report.md
          
      - name: Upload accessibility results
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-audit
          path: |
            accessibility-report.md
            axe-results.json
          retention-days: 30
