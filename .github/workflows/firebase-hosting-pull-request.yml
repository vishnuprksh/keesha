name: Deploy Preview on Pull Request

on:
  pull_request:
    branches: [ main, master ]
    types: [ opened, synchronize, reopened ]

env:
  NODE_VERSION: '20'
  FIREBASE_PROJECT_ID: 'keesha-10560'

jobs:
  build_and_preview:
    name: Build and Deploy Preview
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    environment: 
      name: preview
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit
        
      - name: Run tests (fast)
        run: npm run test -- --watchAll=false --coverage=false
        env:
          CI: true
          
      - name: Build application
        run: npm run build
        env:
          CI: true
          GENERATE_SOURCEMAP: true
          REACT_APP_ENV: preview
          
      - name: Deploy to Firebase Hosting Preview
        uses: FirebaseExtended/action-hosting-deploy@v0
        id: firebase_deploy
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEESHA_10560 }}
          projectId: ${{ env.FIREBASE_PROJECT_ID }}
          expires: 7d
          
      - name: Comment preview URL on PR
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            // Find existing preview comment
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('🚀 Preview deployment')
            );
            
            const previewUrl = '${{ steps.firebase_deploy.outputs.details_url }}';
            const commentBody = `🚀 **Preview deployment ready!**
            
            ✅ Build successful
            🌐 Preview URL: ${previewUrl || 'Deployment in progress...'}
            
            This preview will be available for 7 days and will update with new commits to this PR.`;
            
            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody
              });
            }
